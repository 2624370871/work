create database books;
USE books;
-- 用户表
create table user
(
	uid char(4) PRIMARY key not NULL,
	uname varchar(20) not null,
	email varchar(20),
	tnum varchar(15),
	score INT
);

create table category 
(
	cid int PRIMARY key not NULL,
	cname varchar(16)
);
create table book
(
	bid int PRIMARY key not NULL,
	bname varchar(50),
	author CHAR(8),
 price FLOAT,
publisher VARCHAR(50),
discount FLOAT,
cid INT,
	CONSTRAINT fk_book_category FOREIGN key(cid) REFERENCES category(cid)
);

create table b_order
(
	bid int  not NULL,
	uid CHAR(4) NOT NULL,
	ordernum INT DEFAULT '1' ,
orderdate datetime,
deliverydate datetime
);
INSERT into user
VALUES
('1001','何仙姑','Hxg18@163.com','13320101991','20'),
('1002','平平人生','Lp011@126.com','13545158219','300'),
('1003','四十不惑','12345@qq.com','18688168818','1000'),
('1004','桃花岛主','810124@qq.com','13068011234','600'),
('1005','水灵','zs123@371.cn','15838182503','150'),
('1006','感动心灵','gandong@tom.com','13641151234','500');
INSERT into category
VALUES
('1','历史'),
('2','家教'),
('3','文化'),
('4','小说');

INSERT into book
VALUES
('1','中国时代','师永刚','39.0','作家出版社','27.8','1'),
('2','中国历史的屈辱','王重旭','26.0','华夏出版社','18.2','2'),
('3','择业要趁早','海文','28.0','海天出版社','19.3','3'),
('4','房间','爱玛','37.6','人民文学出版社','26.3','4'),
('5','平凡的世界','路遥','75','北京出版社','63.75','4'),
('6','心灵鸡汤','关然','27.0','大豫出版社','20.0','3'),
('7','蜕','赵婷','32.0','上海出版社','28.5','3');
INSERT into b_order(uid,bid,ordernum,orderdate)
VALUES
('1001','1','2','2016-03-12'),
('1001','3','1','2016-04-15'),
('1001','1','1','2016-09-15'),
('1003','7','1','2015-12-14'),
('1003','3','1','2016-10-10'),
('1005','5','1','2015-08-17'),
('1005','7','3','2016-11-12'),
('1006','5','1','2016-09-18'),
('1006','1','2','2016-10-21'),
('1006','7','2','2016-11-21');
UPDATE user SET uname='何大姑' WHERE uid='1001';
UPDATE b_order SET ordernum='10'WHERE uid='1003' and bid='3';
UPDATE b_order SET orderdate='2016-10-01' WHERE uid='1003' and bid='3';
UPDATE b_order SET deliverydate='2016-10-03'  WHERE uid='1003' and bid='3';
DELETE FROM b_order  WHERE orderdate >'2014-12-31'and  orderdate<'2016-1-1';

SELECT  uname,tnum
FROM user 
WHERE score>500;
SELECT  uname as username,tnum as telephone
FROM user 
WHERE score<200;
SELECT  uname,email
FROM user 
WHERE email LIKE'%@qq.com';
SELECT *
FROM b_order
WHERE orderdate>'2016-9-30' AND orderdate<'2016-11-1';
use books;
SELECT DISTINCT uid FROM b_order;
select bname,price from book order by price desc;
select bname,price from book order by price desc limit 3;
select MAX(price),min(price),avg(price) from book;
select cid,count(*) from book group by cid;
select max(price),min(price),avg(price) from book group by cid;
select uid,sum(ordernum) from b_order group by uid having sum(ordernum)>3;



select uname,tnum,score from user
where score >500;

select uname username,tnum telephone,score from user
where score <200;

select uname,email from user
where email like '%@qq.com';

select * from b_order
where year(orderdate) = 2016 and MONTH(orderdate)=10;

select * from b_order
where orderdate BETWEEN '2016-10-1' and '2016-10-30';

select * from b_order
where orderdate >= '2016-10-1' and  orderdate <= '2016-10-30';

select DISTINCT uid from b_order;

select bname,price  from book
order by price desc;

select bname,price from book
order by price desc
LIMIT 3;



SELECT max(price),min(price),avg(price) from book;


select * from book;
select cid,count(*) from book
GROUP BY cid;


select * from book;
select cid,max(price),min(price),avg(price) from book
GROUP BY cid;


select uid,count(uid) from b_order 
group by uid
HAVING count(uid) >3

select bname,price,cname from book LEFT JOIN category on book.cid = category.cid;

select bname,price,cname from book,category
where book.cid = category.cid;

select uname,tnum,ordernum from b_order LEFT JOIN user on b_order.uid = user.uid
where bid = (select bid from book where bname='平凡的世界');

select uname,tnum,ordernum from b_order,user
where  bid = (select bid from book where bname='平凡的世界') and b_order.uid = user.uid;


select uname,tnum from user where uid in (
select uid from b_order);

select uname,tnum from user where uid not in (
select uid from b_order);

select bname,price from book where bid not in(
select bid from b_order);

select bname,price from book where bid in(
select bid from b_order);

select uname,tnum,bname,ordernum,price,discount FROM b_order left join user on b_order.uid = user.uid  left join book on b_order.bid = book.bid;

select uname,tnum,bname,ordernum,price,discount FROM b_order,user,book
where b_order.uid = user.uid and 
b_order.bid = book.bid;